package DaoImpl;

import model.Vehicle;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import java.util.List;

import static org.junit.jupiter.api.Assertions.*;

public class VehicleDaoImpTest {

    private VehicleDaoImp vehicleDao;

    @BeforeEach
    public void setUp() {
        vehicleDao = new VehicleDaoImp();
    }

    @Test
    public void testRegisterVehicle() { //This test should fail
        Vehicle vehicle = new Vehicle(
            0, // Assuming ID autogenerated by DB
            "ABC-1234",
            "Bus",
            "Diesel",
            8.5,
            50,
            "Route 10"
        );

        boolean result = vehicleDao.registerVehicle(vehicle);
        assertTrue(result, "Vehicle should be registered successfully");
    }

    @Test
    public void testGetAllVehicles() {
        List<Vehicle> vehicles = vehicleDao.getAllVehicles();
        assertNotNull(vehicles, "Vehicle list should not be null");
        assertTrue(vehicles.size() >= 0, "Vehicle list size should be zero or more");

        vehicles.forEach(System.out::println);
    }

    @Test
    public void testGetVehicleById() {
        // Make sure this ID exists in DB 
        int testId = 1;
        Vehicle vehicle = vehicleDao.getVehicleById(testId);
        assertNotNull(vehicle, "Vehicle should not be null");
        assertEquals(testId, vehicle.getId());
    }

    @Test
    public void testUpdateVehicle() { //This test should fail
        // Assuming a vehicle with ID 1 exists in DB
        Vehicle vehicle = new Vehicle(
            1,
            "XYZ-5678",
            "Van",
            "Gasoline",
            6.0,
            12,
            "Route 5"
        );

        boolean updated = vehicleDao.updateVehicle(vehicle);
        assertTrue(updated, "Vehicle should be updated successfully");
    }

    @Test
    public void testDeleteVehicle() { //This test should fail
        // Assuming a vehicle with ID 2 exists and can be deleted
        boolean deleted = vehicleDao.deleteVehicle(2);
        assertTrue(deleted, "Vehicle should be deleted successfully");
    }

    @Test
    public void testCountVehicles() {
        int count = vehicleDao.countVehicles();
        assertTrue(count >= 0, "Vehicle count should be zero or more");
    }
}
